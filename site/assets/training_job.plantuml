@startuml TrainingJob

package "Training Job" {
  object TrainingJob {
    + TrainingJobSpec spec
    + TrainingJobStatus status
  }

  object TrainingJobSpec {
    + RuntimeRef runtimeRef
    + TrainerSpec trainer
    + ModelConfig modelConfig
    + StorageSpec datasets
    + HyperparameterTuningConfig hyperParameterTuningConfig
    + bool suspend
    + map<string,string> labels
    + map<string,string> annotations
    + string compartmentID
  }

  object TrainerSpec {
    + string image
    + string[] command
    + string[] args
    + EnvVar[] env
    + int32 numNodes
    + ResourceRequirements resourcesPerNode
    + string numProcPerNode
  }

  object ModelConfig {
    + string inputModel
    + StorageSpec outputModel
  }

  object HyperparameterTuningConfig {
    + string method
    + MetricConfig metric
    + json parameters
    + int32 maxTrials
  }

  object MetricConfig {
    + string name
    + string goal
  }

  object RuntimeRef {
    + string name
    + string apiGroup
    + string kind
  }

  object TrainingJobStatus {
    + JobStatus[] jobsStatus
    + Condition[] conditions
    + int retryCount
    + Time startTime
    + Time completionTime
    + Time lastReconcileTime
  }
  
  object JobStatus {
    + string name
    + int32 ready
    + int32 succeeded
    + int32 failed
    + int32 active
    + int32 suspended
  }

  TrainingJob --|> TrainingJobSpec
  TrainingJob --|> TrainingJobStatus
  TrainingJobSpec --> RuntimeRef
  TrainingJobSpec --> TrainerSpec
  TrainingJobSpec --> ModelConfig
  TrainingJobSpec --> HyperparameterTuningConfig
  HyperparameterTuningConfig --> MetricConfig
  TrainingJobStatus --> JobStatus
}

@enduml
